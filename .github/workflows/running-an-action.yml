name: Running an action

permissions:
  actions: write
  checks: write
  contents: write
  deployments: write
  issues: write
  packages: write
  pull-requests: write
  repository-projects: write
  security-events: write
  statuses: write

on: 
  workflow_dispatch:

  push:
    branches:
      - main

  pull_request:
    branches:
      - main

jobs:
  speak:
    runs-on: ubuntu-latest

    steps:
    - name: Hello
      run: echo "Hello, world!"

  test:
    runs-on: ubuntu-latest

    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Tests with pytest
        run: |
          cd news_scraper/movie_api
          pytest
        continue-on-error: true

  lint:
    runs-on: ubuntu-latest

    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Lint with pylint
        run: |
          cd news_scraper/movie_api
          pylint *.py --fail-under=8.0
    
  deploy:
    needs: [test, lint]
    runs-on: ubuntu-latest
    
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: Deploy to Staging server
        uses: easingthemes/ssh-deploy@main
        with:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SOURCE: "news_scraper/movie_api"
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
  
  badge:
    runs-on: ubuntu-latest
    
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: Create destination directory for badge
        env:
          BADGE_PATH: .github/badges/done.svg
        run: mkdir -p "${BADGE_PATH%/*}"

      - name: Generate the badge SVG image
        uses: emibcn/badge-action@v1
        id: done_badge
        with:
          label: 'Done: '
          status: 'No'
          color: 'blue'
          path: .github/badges/done.svg
          scale: 1.5

      - name: Upload badge as artifact
        uses: actions/upload-artifact@v2
        with:
          name: badge
          path: .github/badges/done.svg
          if-no-files-found: ignore

      - name: Committing logs and badge to the repository
        if: github.repository != 'sigma-labs-xyz/coursework-template'
        run: |
          git config --global user.name "Faris-Abulula"
          git config --global user.email "abululb02@gmail.com"
          git pull
          git add .github/badges/done.svg
          git checkout main
          git diff-index --quiet HEAD || git commit -am "Update Done"
          git push