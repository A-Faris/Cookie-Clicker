{
 "files": [
  {
   "file_name": "./coding_problems/02-tuesday/tuesday.py",
   "errors": [
    "coding_problems/02-tuesday/tuesday.py:1:12: W0613: Unused argument 'n' (unused-argument)",
    "coding_problems/02-tuesday/tuesday.py:1:0: W0612: Unused variable 'diamond' (unused-variable)"
   ],
   "score": 0.0
  },
  {
   "file_name": "./coding_problems/02-tuesday/test_tuesday.py",
   "errors": [
    "coding_problems/02-tuesday/test_tuesday.py:49:0: C0301: Line too long (237/150) (line-too-long)",
    "coding_problems/02-tuesday/test_tuesday.py:55:0: C0301: Line too long (237/150) (line-too-long)",
    "coding_problems/02-tuesday/test_tuesday.py:57:0: C0301: Line too long (347/150) (line-too-long)",
    "coding_problems/02-tuesday/test_tuesday.py:58:0: C0301: Line too long (289/150) (line-too-long)",
    "coding_problems/02-tuesday/test_tuesday.py:66:0: C0301: Line too long (151/150) (line-too-long)",
    "coding_problems/02-tuesday/test_tuesday.py:5:0: C0103: Constant name \"example_1\" doesn't conform to '(?:(?P<snake_case>[a-z_]+)|(?P<UPPER_CASE>[A-Z_]+)|(?P<PascalCase>[^a-z][A-Za-z]+)|(?P<camelCase>[^A-Z][A-Za-z]+))$' pattern (invalid-name)",
    "coding_problems/02-tuesday/test_tuesday.py:7:0: C0103: Constant name \"example_3\" doesn't conform to '(?:(?P<snake_case>[a-z_]+)|(?P<UPPER_CASE>[A-Z_]+)|(?P<PascalCase>[^a-z][A-Za-z]+)|(?P<camelCase>[^A-Z][A-Za-z]+))$' pattern (invalid-name)",
    "coding_problems/02-tuesday/test_tuesday.py:11:0: C0103: Constant name \"example_5\" doesn't conform to '(?:(?P<snake_case>[a-z_]+)|(?P<UPPER_CASE>[A-Z_]+)|(?P<PascalCase>[^a-z][A-Za-z]+)|(?P<camelCase>[^A-Z][A-Za-z]+))$' pattern (invalid-name)",
    "coding_problems/02-tuesday/test_tuesday.py:18:0: C0103: Function name \"test_basic_test_1\" doesn't conform to '(?:(?P<snake_case>[a-z_]+)|(?P<PascalCase>[^a-z][A-Za-z]+)|(?P<camelCase>[^A-Z][A-Za-z]+))$' pattern (invalid-name)",
    "coding_problems/02-tuesday/test_tuesday.py:22:0: C0103: Function name \"test_basic_test_2\" doesn't conform to '(?:(?P<snake_case>[a-z_]+)|(?P<PascalCase>[^a-z][A-Za-z]+)|(?P<camelCase>[^A-Z][A-Za-z]+))$' pattern (invalid-name)",
    "coding_problems/02-tuesday/test_tuesday.py:23:11: C0121: Comparison 'diamond(2) == None' should be 'diamond(2) is None' (singleton-comparison)",
    "coding_problems/02-tuesday/test_tuesday.py:26:0: C0103: Function name \"test_basic_test_3\" doesn't conform to '(?:(?P<snake_case>[a-z_]+)|(?P<PascalCase>[^a-z][A-Za-z]+)|(?P<camelCase>[^A-Z][A-Za-z]+))$' pattern (invalid-name)",
    "coding_problems/02-tuesday/test_tuesday.py:30:0: C0103: Function name \"test_basic_test_4\" doesn't conform to '(?:(?P<snake_case>[a-z_]+)|(?P<PascalCase>[^a-z][A-Za-z]+)|(?P<camelCase>[^A-Z][A-Za-z]+))$' pattern (invalid-name)",
    "coding_problems/02-tuesday/test_tuesday.py:34:0: C0103: Function name \"test_basic_test_5\" doesn't conform to '(?:(?P<snake_case>[a-z_]+)|(?P<PascalCase>[^a-z][A-Za-z]+)|(?P<camelCase>[^A-Z][A-Za-z]+))$' pattern (invalid-name)",
    "coding_problems/02-tuesday/test_tuesday.py:35:11: C0121: Comparison 'diamond(0) == None' should be 'diamond(0) is None' (singleton-comparison)",
    "coding_problems/02-tuesday/test_tuesday.py:38:0: C0103: Function name \"test_basic_test_6\" doesn't conform to '(?:(?P<snake_case>[a-z_]+)|(?P<PascalCase>[^a-z][A-Za-z]+)|(?P<camelCase>[^A-Z][A-Za-z]+))$' pattern (invalid-name)",
    "coding_problems/02-tuesday/test_tuesday.py:39:11: C0121: Comparison 'diamond(-3) == None' should be 'diamond(-3) is None' (singleton-comparison)",
    "coding_problems/02-tuesday/test_tuesday.py:18:0: W0612: Unused variable 'test_basic_test_1' (unused-variable)",
    "coding_problems/02-tuesday/test_tuesday.py:22:0: W0612: Unused variable 'test_basic_test_2' (unused-variable)",
    "coding_problems/02-tuesday/test_tuesday.py:26:0: W0612: Unused variable 'test_basic_test_3' (unused-variable)",
    "coding_problems/02-tuesday/test_tuesday.py:30:0: W0612: Unused variable 'test_basic_test_4' (unused-variable)",
    "coding_problems/02-tuesday/test_tuesday.py:34:0: W0612: Unused variable 'test_basic_test_5' (unused-variable)",
    "coding_problems/02-tuesday/test_tuesday.py:38:0: W0612: Unused variable 'test_basic_test_6' (unused-variable)",
    "coding_problems/02-tuesday/test_tuesday.py:68:0: W0612: Unused variable 'test_random_test_cases' (unused-variable)"
   ],
   "score": 4.0
  },
  {
   "file_name": "./coding_problems/01-monday/monday.py",
   "errors": [
    "coding_problems/01-monday/monday.py:1:25: E1136: Value 'list' is unsubscriptable (unsubscriptable-object)",
    "coding_problems/01-monday/monday.py:1:9: W0613: Unused argument 'people' (unused-argument)",
    "coding_problems/01-monday/monday.py:1:0: W0612: Unused variable 'wave' (unused-variable)"
   ],
   "score": 0.0
  },
  {
   "file_name": "./coding_problems/01-monday/test_monday.py",
   "errors": [
    "coding_problems/01-monday/test_monday.py:33:0: C0301: Line too long (203/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:34:0: C0301: Line too long (226/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:38:0: C0301: Line too long (1940/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:43:0: C0301: Line too long (190/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:44:0: C0301: Line too long (171/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:45:0: C0301: Line too long (3360/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:46:0: C0301: Line too long (3271/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:47:0: C0301: Line too long (2262/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:48:0: C0301: Line too long (2263/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:49:0: C0301: Line too long (205/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:50:0: C0301: Line too long (206/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:51:0: C0301: Line too long (727/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:52:0: C0301: Line too long (687/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:53:0: C0301: Line too long (2982/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:54:0: C0301: Line too long (2983/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:55:0: C0301: Line too long (3180/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:56:0: C0301: Line too long (3091/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:57:0: C0301: Line too long (2102/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:58:0: C0301: Line too long (2029/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:63:0: C0301: Line too long (426/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:64:0: C0301: Line too long (427/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:65:0: C0301: Line too long (237/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:66:0: C0301: Line too long (215/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:67:0: C0301: Line too long (804/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:68:0: C0301: Line too long (805/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:69:0: C0301: Line too long (3966/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:70:0: C0301: Line too long (3871/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:73:0: C0301: Line too long (2505/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:74:0: C0301: Line too long (2506/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:75:0: C0301: Line too long (2040/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:76:0: C0301: Line too long (2041/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:77:0: C0301: Line too long (4287/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:78:0: C0301: Line too long (4288/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:79:0: C0301: Line too long (2070/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:80:0: C0301: Line too long (2003/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:81:0: C0301: Line too long (3618/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:82:0: C0301: Line too long (3527/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:83:0: C0301: Line too long (630/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:84:0: C0301: Line too long (631/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:85:0: C0301: Line too long (260/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:86:0: C0301: Line too long (238/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:87:0: C0301: Line too long (562/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:88:0: C0301: Line too long (563/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:89:0: C0301: Line too long (506/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:90:0: C0301: Line too long (473/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:91:0: C0301: Line too long (378/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:92:0: C0301: Line too long (350/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:93:0: C0301: Line too long (804/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:94:0: C0301: Line too long (762/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:95:0: C0301: Line too long (2494/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:96:0: C0301: Line too long (2495/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:97:0: C0301: Line too long (3412/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:98:0: C0301: Line too long (3324/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:99:0: C0301: Line too long (4330/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:100:0: C0301: Line too long (4231/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:101:0: C0301: Line too long (1218/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:102:0: C0301: Line too long (1219/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:103:0: C0301: Line too long (3260/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:104:0: C0301: Line too long (3176/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:105:0: C0301: Line too long (3884/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:106:0: C0301: Line too long (3791/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:107:0: C0301: Line too long (2472/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:108:0: C0301: Line too long (2399/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:109:0: C0301: Line too long (3950/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:110:0: C0301: Line too long (3951/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:111:0: C0301: Line too long (1731/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:112:0: C0301: Line too long (1732/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:113:0: C0301: Line too long (1122/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:114:0: C0301: Line too long (1071/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:115:0: C0301: Line too long (1318/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:116:0: C0301: Line too long (1319/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:117:0: C0301: Line too long (255/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:118:0: C0301: Line too long (256/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:121:0: C0301: Line too long (3270/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:122:0: C0301: Line too long (3181/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:125:0: C0301: Line too long (338/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:126:0: C0301: Line too long (339/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:127:0: C0301: Line too long (3110/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:128:0: C0301: Line too long (3111/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:129:0: C0301: Line too long (3966/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:130:0: C0301: Line too long (3871/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:131:0: C0301: Line too long (3910/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:132:0: C0301: Line too long (3814/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:133:0: C0301: Line too long (1564/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:134:0: C0301: Line too long (1506/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:135:0: C0301: Line too long (3374/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:136:0: C0301: Line too long (3375/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:137:0: C0301: Line too long (520/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:138:0: C0301: Line too long (486/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:139:0: C0301: Line too long (1518/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:140:0: C0301: Line too long (1519/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:141:0: C0301: Line too long (3162/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:142:0: C0301: Line too long (3163/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:143:0: C0301: Line too long (693/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:144:0: C0301: Line too long (694/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:145:0: C0301: Line too long (2818/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:146:0: C0301: Line too long (2819/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:148:0: C0301: Line too long (2324/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:149:0: C0301: Line too long (2251/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:150:0: C0301: Line too long (2355/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:151:0: C0301: Line too long (2356/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:154:0: C0301: Line too long (4272/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:155:0: C0301: Line too long (4273/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:158:0: C0301: Line too long (1822/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:159:0: C0301: Line too long (1823/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:160:0: C0301: Line too long (230/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:161:0: C0301: Line too long (206/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:162:0: C0301: Line too long (3501/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:163:0: C0301: Line too long (3413/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:164:0: C0301: Line too long (338/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:165:0: C0301: Line too long (311/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:166:0: C0301: Line too long (570/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:167:0: C0301: Line too long (535/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:168:0: C0301: Line too long (459/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:169:0: C0301: Line too long (427/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:170:0: C0301: Line too long (2169/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:171:0: C0301: Line too long (2101/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:172:0: C0301: Line too long (3374/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:173:0: C0301: Line too long (3375/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:174:0: C0301: Line too long (3735/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:175:0: C0301: Line too long (3736/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:176:0: C0301: Line too long (670/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:177:0: C0301: Line too long (631/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:178:0: C0301: Line too long (182/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:179:0: C0301: Line too long (183/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:180:0: C0301: Line too long (3710/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:181:0: C0301: Line too long (3619/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:182:0: C0301: Line too long (2479/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:183:0: C0301: Line too long (2480/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:184:0: C0301: Line too long (768/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:185:0: C0301: Line too long (769/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:186:0: C0301: Line too long (2769/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:187:0: C0301: Line too long (2770/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:190:0: C0301: Line too long (1446/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:191:0: C0301: Line too long (1447/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:192:0: C0301: Line too long (2231/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:193:0: C0301: Line too long (2161/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:194:0: C0301: Line too long (1878/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:195:0: C0301: Line too long (1813/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:196:0: C0301: Line too long (2439/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:197:0: C0301: Line too long (2367/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:198:0: C0301: Line too long (3710/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:199:0: C0301: Line too long (3619/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:200:0: C0301: Line too long (2280/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:201:0: C0301: Line too long (2281/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:204:0: C0301: Line too long (1934/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:205:0: C0301: Line too long (1935/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:206:0: C0301: Line too long (1030/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:207:0: C0301: Line too long (981/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:208:0: C0301: Line too long (761/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:209:0: C0301: Line too long (762/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:210:0: C0301: Line too long (2886/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:211:0: C0301: Line too long (2887/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:213:0: C0301: Line too long (2130/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:214:0: C0301: Line too long (2131/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:215:0: C0301: Line too long (402/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:216:0: C0301: Line too long (403/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:217:0: C0301: Line too long (702/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:218:0: C0301: Line too long (703/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:219:0: C0301: Line too long (3630/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:220:0: C0301: Line too long (3541/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:221:0: C0301: Line too long (1030/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:222:0: C0301: Line too long (1031/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:223:0: C0301: Line too long (280/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:224:0: C0301: Line too long (256/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:225:0: C0301: Line too long (483/150) (line-too-long)",
    "coding_problems/01-monday/test_monday.py:6:0: C0103: Function name \"test_basic_test_1\" doesn't conform to '(?:(?P<snake_case>[a-z_]+)|(?P<PascalCase>[^a-z][A-Za-z]+)|(?P<camelCase>[^A-Z][A-Za-z]+))$' pattern (invalid-name)",
    "coding_problems/01-monday/test_monday.py:10:0: C0103: Function name \"test_basic_test_2\" doesn't conform to '(?:(?P<snake_case>[a-z_]+)|(?P<PascalCase>[^a-z][A-Za-z]+)|(?P<camelCase>[^A-Z][A-Za-z]+))$' pattern (invalid-name)",
    "coding_problems/01-monday/test_monday.py:15:0: C0103: Function name \"test_basic_test_3\" doesn't conform to '(?:(?P<snake_case>[a-z_]+)|(?P<PascalCase>[^a-z][A-Za-z]+)|(?P<camelCase>[^A-Z][A-Za-z]+))$' pattern (invalid-name)",
    "coding_problems/01-monday/test_monday.py:19:0: C0103: Function name \"test_basic_test_4\" doesn't conform to '(?:(?P<snake_case>[a-z_]+)|(?P<PascalCase>[^a-z][A-Za-z]+)|(?P<camelCase>[^A-Z][A-Za-z]+))$' pattern (invalid-name)",
    "coding_problems/01-monday/test_monday.py:24:0: C0103: Function name \"test_basic_test_5\" doesn't conform to '(?:(?P<snake_case>[a-z_]+)|(?P<PascalCase>[^a-z][A-Za-z]+)|(?P<camelCase>[^A-Z][A-Za-z]+))$' pattern (invalid-name)",
    "coding_problems/01-monday/test_monday.py:28:0: C0103: Function name \"test_basic_test_6\" doesn't conform to '(?:(?P<snake_case>[a-z_]+)|(?P<PascalCase>[^a-z][A-Za-z]+)|(?P<camelCase>[^A-Z][A-Za-z]+))$' pattern (invalid-name)",
    "coding_problems/01-monday/test_monday.py:32:0: C0103: Function name \"test_basic_test_7\" doesn't conform to '(?:(?P<snake_case>[a-z_]+)|(?P<PascalCase>[^a-z][A-Za-z]+)|(?P<camelCase>[^A-Z][A-Za-z]+))$' pattern (invalid-name)",
    "coding_problems/01-monday/test_monday.py:6:0: W0612: Unused variable 'test_basic_test_1' (unused-variable)",
    "coding_problems/01-monday/test_monday.py:10:0: W0612: Unused variable 'test_basic_test_2' (unused-variable)",
    "coding_problems/01-monday/test_monday.py:15:0: W0612: Unused variable 'test_basic_test_3' (unused-variable)",
    "coding_problems/01-monday/test_monday.py:19:0: W0612: Unused variable 'test_basic_test_4' (unused-variable)",
    "coding_problems/01-monday/test_monday.py:24:0: W0612: Unused variable 'test_basic_test_5' (unused-variable)",
    "coding_problems/01-monday/test_monday.py:28:0: W0612: Unused variable 'test_basic_test_6' (unused-variable)",
    "coding_problems/01-monday/test_monday.py:32:0: W0612: Unused variable 'test_basic_test_7' (unused-variable)",
    "coding_problems/01-monday/test_monday.py:226:0: W0612: Unused variable 'test_random_test_cases' (unused-variable)"
   ],
   "score": 0.0
  },
  {
   "file_name": "./coding_problems/04-thursday/test_thursday.py",
   "errors": [
    "coding_problems/04-thursday/test_thursday.py:26:0: C0301: Line too long (221/150) (line-too-long)",
    "coding_problems/04-thursday/test_thursday.py:27:0: C0301: Line too long (235/150) (line-too-long)",
    "coding_problems/04-thursday/test_thursday.py:28:0: C0301: Line too long (294/150) (line-too-long)",
    "coding_problems/04-thursday/test_thursday.py:29:0: C0301: Line too long (265/150) (line-too-long)",
    "coding_problems/04-thursday/test_thursday.py:33:0: C0301: Line too long (379/150) (line-too-long)",
    "coding_problems/04-thursday/test_thursday.py:34:0: C0301: Line too long (357/150) (line-too-long)",
    "coding_problems/04-thursday/test_thursday.py:40:0: C0301: Line too long (152/150) (line-too-long)",
    "coding_problems/04-thursday/test_thursday.py:43:0: C0301: Line too long (335/150) (line-too-long)",
    "coding_problems/04-thursday/test_thursday.py:44:0: C0301: Line too long (339/150) (line-too-long)",
    "coding_problems/04-thursday/test_thursday.py:45:0: C0301: Line too long (189/150) (line-too-long)",
    "coding_problems/04-thursday/test_thursday.py:46:0: C0301: Line too long (220/150) (line-too-long)",
    "coding_problems/04-thursday/test_thursday.py:49:0: C0301: Line too long (152/150) (line-too-long)",
    "coding_problems/04-thursday/test_thursday.py:55:0: C0301: Line too long (152/150) (line-too-long)",
    "coding_problems/04-thursday/test_thursday.py:58:0: C0301: Line too long (336/150) (line-too-long)",
    "coding_problems/04-thursday/test_thursday.py:6:0: C0103: Function name \"test_basic_test_1\" doesn't conform to '(?:(?P<snake_case>[a-z_]+)|(?P<PascalCase>[^a-z][A-Za-z]+)|(?P<camelCase>[^A-Z][A-Za-z]+))$' pattern (invalid-name)",
    "coding_problems/04-thursday/test_thursday.py:10:0: C0103: Function name \"test_basic_test_2\" doesn't conform to '(?:(?P<snake_case>[a-z_]+)|(?P<PascalCase>[^a-z][A-Za-z]+)|(?P<camelCase>[^A-Z][A-Za-z]+))$' pattern (invalid-name)",
    "coding_problems/04-thursday/test_thursday.py:14:0: C0103: Function name \"test_basic_test_3\" doesn't conform to '(?:(?P<snake_case>[a-z_]+)|(?P<PascalCase>[^a-z][A-Za-z]+)|(?P<camelCase>[^A-Z][A-Za-z]+))$' pattern (invalid-name)",
    "coding_problems/04-thursday/test_thursday.py:18:0: C0103: Function name \"test_basic_test_4\" doesn't conform to '(?:(?P<snake_case>[a-z_]+)|(?P<PascalCase>[^a-z][A-Za-z]+)|(?P<camelCase>[^A-Z][A-Za-z]+))$' pattern (invalid-name)",
    "coding_problems/04-thursday/test_thursday.py:6:0: W0612: Unused variable 'test_basic_test_1' (unused-variable)",
    "coding_problems/04-thursday/test_thursday.py:10:0: W0612: Unused variable 'test_basic_test_2' (unused-variable)",
    "coding_problems/04-thursday/test_thursday.py:14:0: W0612: Unused variable 'test_basic_test_3' (unused-variable)",
    "coding_problems/04-thursday/test_thursday.py:18:0: W0612: Unused variable 'test_basic_test_4' (unused-variable)",
    "coding_problems/04-thursday/test_thursday.py:59:0: W0612: Unused variable 'test_random_test_cases' (unused-variable)"
   ],
   "score": 0.0
  },
  {
   "file_name": "./coding_problems/04-thursday/thursday.py",
   "errors": [
    "coding_problems/04-thursday/thursday.py:1:12: W0613: Unused argument 'n' (unused-argument)",
    "coding_problems/04-thursday/thursday.py:1:0: W0612: Unused variable 'pyramid' (unused-variable)"
   ],
   "score": 0.0
  },
  {
   "file_name": "./coding_problems/05-friday/friday.py",
   "errors": [
    "coding_problems/05-friday/friday.py:1:0: C0103: Function name \"is_valid_IP\" doesn't conform to '(?:(?P<snake_case>[a-z_]+)|(?P<PascalCase>[^a-z][A-Za-z]+)|(?P<camelCase>[^A-Z][A-Za-z]+))$' pattern (invalid-name)",
    "coding_problems/05-friday/friday.py:1:16: W0613: Unused argument 'strng' (unused-argument)",
    "coding_problems/05-friday/friday.py:1:0: W0612: Unused variable 'is_valid_IP' (unused-variable)"
   ],
   "score": 0.0
  },
  {
   "file_name": "./coding_problems/05-friday/test_friday.py",
   "errors": [
    "coding_problems/05-friday/test_friday.py:6:0: C0103: Function name \"test_basic_test_1\" doesn't conform to '(?:(?P<snake_case>[a-z_]+)|(?P<PascalCase>[^a-z][A-Za-z]+)|(?P<camelCase>[^A-Z][A-Za-z]+))$' pattern (invalid-name)",
    "coding_problems/05-friday/test_friday.py:7:11: C0121: Comparison 'is_valid_IP('12.255.56.1') == True' should be 'is_valid_IP('12.255.56.1') is True' if checking for the singleton value True, or 'is_valid_IP('12.255.56.1')' if testing for truthiness (singleton-comparison)",
    "coding_problems/05-friday/test_friday.py:10:0: C0103: Function name \"test_basic_test_2\" doesn't conform to '(?:(?P<snake_case>[a-z_]+)|(?P<PascalCase>[^a-z][A-Za-z]+)|(?P<camelCase>[^A-Z][A-Za-z]+))$' pattern (invalid-name)",
    "coding_problems/05-friday/test_friday.py:11:11: C0121: Comparison 'is_valid_IP('') == False' should be 'is_valid_IP('') is False' if checking for the singleton value False, or 'not is_valid_IP('')' if testing for falsiness (singleton-comparison)",
    "coding_problems/05-friday/test_friday.py:14:0: C0103: Function name \"test_basic_test_3\" doesn't conform to '(?:(?P<snake_case>[a-z_]+)|(?P<PascalCase>[^a-z][A-Za-z]+)|(?P<camelCase>[^A-Z][A-Za-z]+))$' pattern (invalid-name)",
    "coding_problems/05-friday/test_friday.py:15:11: C0121: Comparison 'is_valid_IP('abc.def.ghi.jkl') == False' should be 'is_valid_IP('abc.def.ghi.jkl') is False' if checking for the singleton value False, or 'not is_valid_IP('abc.def.ghi.jkl')' if testing for falsiness (singleton-comparison)",
    "coding_problems/05-friday/test_friday.py:18:0: C0103: Function name \"test_basic_test_4\" doesn't conform to '(?:(?P<snake_case>[a-z_]+)|(?P<PascalCase>[^a-z][A-Za-z]+)|(?P<camelCase>[^A-Z][A-Za-z]+))$' pattern (invalid-name)",
    "coding_problems/05-friday/test_friday.py:19:11: C0121: Comparison 'is_valid_IP('123.456.789.0') == False' should be 'is_valid_IP('123.456.789.0') is False' if checking for the singleton value False, or 'not is_valid_IP('123.456.789.0')' if testing for falsiness (singleton-comparison)",
    "coding_problems/05-friday/test_friday.py:22:0: C0103: Function name \"test_basic_test_5\" doesn't conform to '(?:(?P<snake_case>[a-z_]+)|(?P<PascalCase>[^a-z][A-Za-z]+)|(?P<camelCase>[^A-Z][A-Za-z]+))$' pattern (invalid-name)",
    "coding_problems/05-friday/test_friday.py:23:11: C0121: Comparison 'is_valid_IP('12.34.56') == False' should be 'is_valid_IP('12.34.56') is False' if checking for the singleton value False, or 'not is_valid_IP('12.34.56')' if testing for falsiness (singleton-comparison)",
    "coding_problems/05-friday/test_friday.py:26:0: C0103: Function name \"test_basic_test_6\" doesn't conform to '(?:(?P<snake_case>[a-z_]+)|(?P<PascalCase>[^a-z][A-Za-z]+)|(?P<camelCase>[^A-Z][A-Za-z]+))$' pattern (invalid-name)",
    "coding_problems/05-friday/test_friday.py:27:11: C0121: Comparison 'is_valid_IP('12.34.56 .1') == False' should be 'is_valid_IP('12.34.56 .1') is False' if checking for the singleton value False, or 'not is_valid_IP('12.34.56 .1')' if testing for falsiness (singleton-comparison)",
    "coding_problems/05-friday/test_friday.py:30:0: C0103: Function name \"test_basic_test_7\" doesn't conform to '(?:(?P<snake_case>[a-z_]+)|(?P<PascalCase>[^a-z][A-Za-z]+)|(?P<camelCase>[^A-Z][A-Za-z]+))$' pattern (invalid-name)",
    "coding_problems/05-friday/test_friday.py:31:11: C0121: Comparison 'is_valid_IP('12.34.56.-1') == False' should be 'is_valid_IP('12.34.56.-1') is False' if checking for the singleton value False, or 'not is_valid_IP('12.34.56.-1')' if testing for falsiness (singleton-comparison)",
    "coding_problems/05-friday/test_friday.py:34:0: C0103: Function name \"test_basic_test_8\" doesn't conform to '(?:(?P<snake_case>[a-z_]+)|(?P<PascalCase>[^a-z][A-Za-z]+)|(?P<camelCase>[^A-Z][A-Za-z]+))$' pattern (invalid-name)",
    "coding_problems/05-friday/test_friday.py:35:11: C0121: Comparison 'is_valid_IP('123.045.067.089') == False' should be 'is_valid_IP('123.045.067.089') is False' if checking for the singleton value False, or 'not is_valid_IP('123.045.067.089')' if testing for falsiness (singleton-comparison)",
    "coding_problems/05-friday/test_friday.py:38:0: C0103: Function name \"test_basic_test_9\" doesn't conform to '(?:(?P<snake_case>[a-z_]+)|(?P<PascalCase>[^a-z][A-Za-z]+)|(?P<camelCase>[^A-Z][A-Za-z]+))$' pattern (invalid-name)",
    "coding_problems/05-friday/test_friday.py:39:11: C0121: Comparison 'is_valid_IP('127.1.1.0') == True' should be 'is_valid_IP('127.1.1.0') is True' if checking for the singleton value True, or 'is_valid_IP('127.1.1.0')' if testing for truthiness (singleton-comparison)",
    "coding_problems/05-friday/test_friday.py:42:0: C0103: Function name \"test_basic_test_10\" doesn't conform to '(?:(?P<snake_case>[a-z_]+)|(?P<PascalCase>[^a-z][A-Za-z]+)|(?P<camelCase>[^A-Z][A-Za-z]+))$' pattern (invalid-name)",
    "coding_problems/05-friday/test_friday.py:43:11: C0121: Comparison 'is_valid_IP('0.0.0.0') == True' should be 'is_valid_IP('0.0.0.0') is True' if checking for the singleton value True, or 'is_valid_IP('0.0.0.0')' if testing for truthiness (singleton-comparison)",
    "coding_problems/05-friday/test_friday.py:46:0: C0103: Function name \"test_basic_test_11\" doesn't conform to '(?:(?P<snake_case>[a-z_]+)|(?P<PascalCase>[^a-z][A-Za-z]+)|(?P<camelCase>[^A-Z][A-Za-z]+))$' pattern (invalid-name)",
    "coding_problems/05-friday/test_friday.py:47:11: C0121: Comparison 'is_valid_IP('0.34.82.53') == True' should be 'is_valid_IP('0.34.82.53') is True' if checking for the singleton value True, or 'is_valid_IP('0.34.82.53')' if testing for truthiness (singleton-comparison)",
    "coding_problems/05-friday/test_friday.py:50:0: C0103: Function name \"test_basic_test_12\" doesn't conform to '(?:(?P<snake_case>[a-z_]+)|(?P<PascalCase>[^a-z][A-Za-z]+)|(?P<camelCase>[^A-Z][A-Za-z]+))$' pattern (invalid-name)",
    "coding_problems/05-friday/test_friday.py:51:11: C0121: Comparison 'is_valid_IP('192.168.1.300') == False' should be 'is_valid_IP('192.168.1.300') is False' if checking for the singleton value False, or 'not is_valid_IP('192.168.1.300')' if testing for falsiness (singleton-comparison)",
    "coding_problems/05-friday/test_friday.py:54:0: C0103: Function name \"test_invalid_ip_1\" doesn't conform to '(?:(?P<snake_case>[a-z_]+)|(?P<PascalCase>[^a-z][A-Za-z]+)|(?P<camelCase>[^A-Z][A-Za-z]+))$' pattern (invalid-name)",
    "coding_problems/05-friday/test_friday.py:55:11: C0121: Comparison 'is_valid_IP('') == False' should be 'is_valid_IP('') is False' if checking for the singleton value False, or 'not is_valid_IP('')' if testing for falsiness (singleton-comparison)",
    "coding_problems/05-friday/test_friday.py:58:0: C0103: Function name \"test_invalid_ip_2\" doesn't conform to '(?:(?P<snake_case>[a-z_]+)|(?P<PascalCase>[^a-z][A-Za-z]+)|(?P<camelCase>[^A-Z][A-Za-z]+))$' pattern (invalid-name)",
    "coding_problems/05-friday/test_friday.py:59:11: C0121: Comparison 'is_valid_IP('abc.def.ghi.jkl') == False' should be 'is_valid_IP('abc.def.ghi.jkl') is False' if checking for the singleton value False, or 'not is_valid_IP('abc.def.ghi.jkl')' if testing for falsiness (singleton-comparison)",
    "coding_problems/05-friday/test_friday.py:62:0: C0103: Function name \"test_invalid_ip_3\" doesn't conform to '(?:(?P<snake_case>[a-z_]+)|(?P<PascalCase>[^a-z][A-Za-z]+)|(?P<camelCase>[^A-Z][A-Za-z]+))$' pattern (invalid-name)",
    "coding_problems/05-friday/test_friday.py:63:11: C0121: Comparison 'is_valid_IP('123.456.789.0') == False' should be 'is_valid_IP('123.456.789.0') is False' if checking for the singleton value False, or 'not is_valid_IP('123.456.789.0')' if testing for falsiness (singleton-comparison)",
    "coding_problems/05-friday/test_friday.py:66:0: C0103: Function name \"test_invalid_ip_4\" doesn't conform to '(?:(?P<snake_case>[a-z_]+)|(?P<PascalCase>[^a-z][A-Za-z]+)|(?P<camelCase>[^A-Z][A-Za-z]+))$' pattern (invalid-name)",
    "coding_problems/05-friday/test_friday.py:67:11: C0121: Comparison 'is_valid_IP('12.34.56') == False' should be 'is_valid_IP('12.34.56') is False' if checking for the singleton value False, or 'not is_valid_IP('12.34.56')' if testing for falsiness (singleton-comparison)",
    "coding_problems/05-friday/test_friday.py:70:0: C0103: Function name \"test_invalid_ip_5\" doesn't conform to '(?:(?P<snake_case>[a-z_]+)|(?P<PascalCase>[^a-z][A-Za-z]+)|(?P<camelCase>[^A-Z][A-Za-z]+))$' pattern (invalid-name)",
    "coding_problems/05-friday/test_friday.py:71:11: C0121: Comparison 'is_valid_IP('01.02.03.04') == False' should be 'is_valid_IP('01.02.03.04') is False' if checking for the singleton value False, or 'not is_valid_IP('01.02.03.04')' if testing for falsiness (singleton-comparison)",
    "coding_problems/05-friday/test_friday.py:74:0: C0103: Function name \"test_invalid_ip_6\" doesn't conform to '(?:(?P<snake_case>[a-z_]+)|(?P<PascalCase>[^a-z][A-Za-z]+)|(?P<camelCase>[^A-Z][A-Za-z]+))$' pattern (invalid-name)",
    "coding_problems/05-friday/test_friday.py:75:11: C0121: Comparison 'is_valid_IP('256.1.2.3') == False' should be 'is_valid_IP('256.1.2.3') is False' if checking for the singleton value False, or 'not is_valid_IP('256.1.2.3')' if testing for falsiness (singleton-comparison)",
    "coding_problems/05-friday/test_friday.py:78:0: C0103: Function name \"test_invalid_ip_7\" doesn't conform to '(?:(?P<snake_case>[a-z_]+)|(?P<PascalCase>[^a-z][A-Za-z]+)|(?P<camelCase>[^A-Z][A-Za-z]+))$' pattern (invalid-name)",
    "coding_problems/05-friday/test_friday.py:79:11: C0121: Comparison 'is_valid_IP('1.2.3.4.5') == False' should be 'is_valid_IP('1.2.3.4.5') is False' if checking for the singleton value False, or 'not is_valid_IP('1.2.3.4.5')' if testing for falsiness (singleton-comparison)",
    "coding_problems/05-friday/test_friday.py:82:0: C0103: Function name \"test_invalid_ip_8\" doesn't conform to '(?:(?P<snake_case>[a-z_]+)|(?P<PascalCase>[^a-z][A-Za-z]+)|(?P<camelCase>[^A-Z][A-Za-z]+))$' pattern (invalid-name)",
    "coding_problems/05-friday/test_friday.py:83:11: C0121: Comparison 'is_valid_IP('123,45,67,89') == False' should be 'is_valid_IP('123,45,67,89') is False' if checking for the singleton value False, or 'not is_valid_IP('123,45,67,89')' if testing for falsiness (singleton-comparison)",
    "coding_problems/05-friday/test_friday.py:86:0: C0103: Function name \"test_invalid_ip_9\" doesn't conform to '(?:(?P<snake_case>[a-z_]+)|(?P<PascalCase>[^a-z][A-Za-z]+)|(?P<camelCase>[^A-Z][A-Za-z]+))$' pattern (invalid-name)",
    "coding_problems/05-friday/test_friday.py:87:11: C0121: Comparison 'is_valid_IP('1e0.1e1.1e2.2e2') == False' should be 'is_valid_IP('1e0.1e1.1e2.2e2') is False' if checking for the singleton value False, or 'not is_valid_IP('1e0.1e1.1e2.2e2')' if testing for falsiness (singleton-comparison)",
    "coding_problems/05-friday/test_friday.py:90:0: C0103: Function name \"test_invalid_ip_10\" doesn't conform to '(?:(?P<snake_case>[a-z_]+)|(?P<PascalCase>[^a-z][A-Za-z]+)|(?P<camelCase>[^A-Z][A-Za-z]+))$' pattern (invalid-name)",
    "coding_problems/05-friday/test_friday.py:91:11: C0121: Comparison 'is_valid_IP(' 1.2.3.4') == False' should be 'is_valid_IP(' 1.2.3.4') is False' if checking for the singleton value False, or 'not is_valid_IP(' 1.2.3.4')' if testing for falsiness (singleton-comparison)",
    "coding_problems/05-friday/test_friday.py:94:0: C0103: Function name \"test_invalid_ip_11\" doesn't conform to '(?:(?P<snake_case>[a-z_]+)|(?P<PascalCase>[^a-z][A-Za-z]+)|(?P<camelCase>[^A-Z][A-Za-z]+))$' pattern (invalid-name)",
    "coding_problems/05-friday/test_friday.py:95:11: C0121: Comparison 'is_valid_IP('1.2.3.4 ') == False' should be 'is_valid_IP('1.2.3.4 ') is False' if checking for the singleton value False, or 'not is_valid_IP('1.2.3.4 ')' if testing for falsiness (singleton-comparison)",
    "coding_problems/05-friday/test_friday.py:98:0: C0103: Function name \"test_invalid_ip_12\" doesn't conform to '(?:(?P<snake_case>[a-z_]+)|(?P<PascalCase>[^a-z][A-Za-z]+)|(?P<camelCase>[^A-Z][A-Za-z]+))$' pattern (invalid-name)",
    "coding_problems/05-friday/test_friday.py:99:11: C0121: Comparison 'is_valid_IP('12.34.56.-7') == False' should be 'is_valid_IP('12.34.56.-7') is False' if checking for the singleton value False, or 'not is_valid_IP('12.34.56.-7')' if testing for falsiness (singleton-comparison)",
    "coding_problems/05-friday/test_friday.py:102:0: C0103: Function name \"test_invalid_ip_12\" doesn't conform to '(?:(?P<snake_case>[a-z_]+)|(?P<PascalCase>[^a-z][A-Za-z]+)|(?P<camelCase>[^A-Z][A-Za-z]+))$' pattern (invalid-name)",
    "coding_problems/05-friday/test_friday.py:102:0: E0102: function already defined line 98 (function-redefined)",
    "coding_problems/05-friday/test_friday.py:103:11: C0121: Comparison 'is_valid_IP('1.2.3.4\\n') == False' should be 'is_valid_IP('1.2.3.4\\n') is False' if checking for the singleton value False, or 'not is_valid_IP('1.2.3.4\\n')' if testing for falsiness (singleton-comparison)",
    "coding_problems/05-friday/test_friday.py:106:0: C0103: Function name \"test_invalid_ip_13\" doesn't conform to '(?:(?P<snake_case>[a-z_]+)|(?P<PascalCase>[^a-z][A-Za-z]+)|(?P<camelCase>[^A-Z][A-Za-z]+))$' pattern (invalid-name)",
    "coding_problems/05-friday/test_friday.py:107:11: C0121: Comparison 'is_valid_IP('\\n1.2.3.4') == False' should be 'is_valid_IP('\\n1.2.3.4') is False' if checking for the singleton value False, or 'not is_valid_IP('\\n1.2.3.4')' if testing for falsiness (singleton-comparison)",
    "coding_problems/05-friday/test_friday.py:110:0: C0103: Function name \"test_invalid_ip_14\" doesn't conform to '(?:(?P<snake_case>[a-z_]+)|(?P<PascalCase>[^a-z][A-Za-z]+)|(?P<camelCase>[^A-Z][A-Za-z]+))$' pattern (invalid-name)",
    "coding_problems/05-friday/test_friday.py:111:11: C0121: Comparison 'is_valid_IP('123.045.067.089') == False' should be 'is_valid_IP('123.045.067.089') is False' if checking for the singleton value False, or 'not is_valid_IP('123.045.067.089')' if testing for falsiness (singleton-comparison)",
    "coding_problems/05-friday/test_friday.py:114:0: C0103: Function name \"test_valid_ip_1\" doesn't conform to '(?:(?P<snake_case>[a-z_]+)|(?P<PascalCase>[^a-z][A-Za-z]+)|(?P<camelCase>[^A-Z][A-Za-z]+))$' pattern (invalid-name)",
    "coding_problems/05-friday/test_friday.py:115:11: C0121: Comparison 'is_valid_IP('0.0.0.0') == True' should be 'is_valid_IP('0.0.0.0') is True' if checking for the singleton value True, or 'is_valid_IP('0.0.0.0')' if testing for truthiness (singleton-comparison)",
    "coding_problems/05-friday/test_friday.py:118:0: C0103: Function name \"test_valid_ip_2\" doesn't conform to '(?:(?P<snake_case>[a-z_]+)|(?P<PascalCase>[^a-z][A-Za-z]+)|(?P<camelCase>[^A-Z][A-Za-z]+))$' pattern (invalid-name)",
    "coding_problems/05-friday/test_friday.py:119:11: C0121: Comparison 'is_valid_IP('123.45.67.89') == True' should be 'is_valid_IP('123.45.67.89') is True' if checking for the singleton value True, or 'is_valid_IP('123.45.67.89')' if testing for truthiness (singleton-comparison)",
    "coding_problems/05-friday/test_friday.py:122:0: C0103: Function name \"test_valid_ip_3\" doesn't conform to '(?:(?P<snake_case>[a-z_]+)|(?P<PascalCase>[^a-z][A-Za-z]+)|(?P<camelCase>[^A-Z][A-Za-z]+))$' pattern (invalid-name)",
    "coding_problems/05-friday/test_friday.py:123:11: C0121: Comparison 'is_valid_IP('255.255.255.255') == True' should be 'is_valid_IP('255.255.255.255') is True' if checking for the singleton value True, or 'is_valid_IP('255.255.255.255')' if testing for truthiness (singleton-comparison)",
    "coding_problems/05-friday/test_friday.py:126:0: C0103: Function name \"test_valid_ip_4\" doesn't conform to '(?:(?P<snake_case>[a-z_]+)|(?P<PascalCase>[^a-z][A-Za-z]+)|(?P<camelCase>[^A-Z][A-Za-z]+))$' pattern (invalid-name)",
    "coding_problems/05-friday/test_friday.py:127:11: C0121: Comparison 'is_valid_IP('1.2.3.4') == True' should be 'is_valid_IP('1.2.3.4') is True' if checking for the singleton value True, or 'is_valid_IP('1.2.3.4')' if testing for truthiness (singleton-comparison)",
    "coding_problems/05-friday/test_friday.py:130:0: C0103: Function name \"test_valid_ip_5\" doesn't conform to '(?:(?P<snake_case>[a-z_]+)|(?P<PascalCase>[^a-z][A-Za-z]+)|(?P<camelCase>[^A-Z][A-Za-z]+))$' pattern (invalid-name)",
    "coding_problems/05-friday/test_friday.py:131:11: C0121: Comparison 'is_valid_IP('31.41.59.26') == True' should be 'is_valid_IP('31.41.59.26') is True' if checking for the singleton value True, or 'is_valid_IP('31.41.59.26')' if testing for truthiness (singleton-comparison)",
    "coding_problems/05-friday/test_friday.py:134:0: C0103: Function name \"test_valid_ip_6\" doesn't conform to '(?:(?P<snake_case>[a-z_]+)|(?P<PascalCase>[^a-z][A-Za-z]+)|(?P<camelCase>[^A-Z][A-Za-z]+))$' pattern (invalid-name)",
    "coding_problems/05-friday/test_friday.py:135:11: C0121: Comparison 'is_valid_IP('53.58.97.93') == True' should be 'is_valid_IP('53.58.97.93') is True' if checking for the singleton value True, or 'is_valid_IP('53.58.97.93')' if testing for truthiness (singleton-comparison)",
    "coding_problems/05-friday/test_friday.py:138:0: C0103: Function name \"test_valid_ip_7\" doesn't conform to '(?:(?P<snake_case>[a-z_]+)|(?P<PascalCase>[^a-z][A-Za-z]+)|(?P<camelCase>[^A-Z][A-Za-z]+))$' pattern (invalid-name)",
    "coding_problems/05-friday/test_friday.py:139:11: C0121: Comparison 'is_valid_IP('238.46.26.43') == True' should be 'is_valid_IP('238.46.26.43') is True' if checking for the singleton value True, or 'is_valid_IP('238.46.26.43')' if testing for truthiness (singleton-comparison)",
    "coding_problems/05-friday/test_friday.py:142:0: C0103: Function name \"test_valid_ip_8\" doesn't conform to '(?:(?P<snake_case>[a-z_]+)|(?P<PascalCase>[^a-z][A-Za-z]+)|(?P<camelCase>[^A-Z][A-Za-z]+))$' pattern (invalid-name)",
    "coding_problems/05-friday/test_friday.py:143:11: C0121: Comparison 'is_valid_IP('38.32.79.50') == True' should be 'is_valid_IP('38.32.79.50') is True' if checking for the singleton value True, or 'is_valid_IP('38.32.79.50')' if testing for truthiness (singleton-comparison)",
    "coding_problems/05-friday/test_friday.py:146:0: C0103: Function name \"test_valid_ip_9\" doesn't conform to '(?:(?P<snake_case>[a-z_]+)|(?P<PascalCase>[^a-z][A-Za-z]+)|(?P<camelCase>[^A-Z][A-Za-z]+))$' pattern (invalid-name)",
    "coding_problems/05-friday/test_friday.py:147:11: C0121: Comparison 'is_valid_IP('28.84.197.169') == True' should be 'is_valid_IP('28.84.197.169') is True' if checking for the singleton value True, or 'is_valid_IP('28.84.197.169')' if testing for truthiness (singleton-comparison)",
    "coding_problems/05-friday/test_friday.py:150:0: C0103: Function name \"test_valid_ip_10\" doesn't conform to '(?:(?P<snake_case>[a-z_]+)|(?P<PascalCase>[^a-z][A-Za-z]+)|(?P<camelCase>[^A-Z][A-Za-z]+))$' pattern (invalid-name)",
    "coding_problems/05-friday/test_friday.py:151:11: C0121: Comparison 'is_valid_IP('39.93.75.105') == True' should be 'is_valid_IP('39.93.75.105') is True' if checking for the singleton value True, or 'is_valid_IP('39.93.75.105')' if testing for truthiness (singleton-comparison)",
    "coding_problems/05-friday/test_friday.py:154:0: C0103: Function name \"test_valid_ip_11\" doesn't conform to '(?:(?P<snake_case>[a-z_]+)|(?P<PascalCase>[^a-z][A-Za-z]+)|(?P<camelCase>[^A-Z][A-Za-z]+))$' pattern (invalid-name)",
    "coding_problems/05-friday/test_friday.py:155:11: C0121: Comparison 'is_valid_IP('82.0.97.49') == True' should be 'is_valid_IP('82.0.97.49') is True' if checking for the singleton value True, or 'is_valid_IP('82.0.97.49')' if testing for truthiness (singleton-comparison)",
    "coding_problems/05-friday/test_friday.py:158:0: C0103: Function name \"test_valid_ip_12\" doesn't conform to '(?:(?P<snake_case>[a-z_]+)|(?P<PascalCase>[^a-z][A-Za-z]+)|(?P<camelCase>[^A-Z][A-Za-z]+))$' pattern (invalid-name)",
    "coding_problems/05-friday/test_friday.py:159:11: C0121: Comparison 'is_valid_IP('44.59.230.78') == True' should be 'is_valid_IP('44.59.230.78') is True' if checking for the singleton value True, or 'is_valid_IP('44.59.230.78')' if testing for truthiness (singleton-comparison)",
    "coding_problems/05-friday/test_friday.py:162:0: C0103: Function name \"test_valid_ip_13\" doesn't conform to '(?:(?P<snake_case>[a-z_]+)|(?P<PascalCase>[^a-z][A-Za-z]+)|(?P<camelCase>[^A-Z][A-Za-z]+))$' pattern (invalid-name)",
    "coding_problems/05-friday/test_friday.py:163:11: C0121: Comparison 'is_valid_IP('164.0.62.86') == True' should be 'is_valid_IP('164.0.62.86') is True' if checking for the singleton value True, or 'is_valid_IP('164.0.62.86')' if testing for truthiness (singleton-comparison)",
    "coding_problems/05-friday/test_friday.py:166:0: C0103: Function name \"test_valid_ip_14\" doesn't conform to '(?:(?P<snake_case>[a-z_]+)|(?P<PascalCase>[^a-z][A-Za-z]+)|(?P<camelCase>[^A-Z][A-Za-z]+))$' pattern (invalid-name)",
    "coding_problems/05-friday/test_friday.py:167:11: C0121: Comparison 'is_valid_IP('208.99.86.28') == True' should be 'is_valid_IP('208.99.86.28') is True' if checking for the singleton value True, or 'is_valid_IP('208.99.86.28')' if testing for truthiness (singleton-comparison)",
    "coding_problems/05-friday/test_friday.py:170:0: C0103: Function name \"test_valid_ip_15\" doesn't conform to '(?:(?P<snake_case>[a-z_]+)|(?P<PascalCase>[^a-z][A-Za-z]+)|(?P<camelCase>[^A-Z][A-Za-z]+))$' pattern (invalid-name)",
    "coding_problems/05-friday/test_friday.py:171:11: C0121: Comparison 'is_valid_IP('0.34.82.53') == True' should be 'is_valid_IP('0.34.82.53') is True' if checking for the singleton value True, or 'is_valid_IP('0.34.82.53')' if testing for truthiness (singleton-comparison)",
    "coding_problems/05-friday/test_friday.py:174:0: C0103: Function name \"test_valid_ip_16\" doesn't conform to '(?:(?P<snake_case>[a-z_]+)|(?P<PascalCase>[^a-z][A-Za-z]+)|(?P<camelCase>[^A-Z][A-Za-z]+))$' pattern (invalid-name)",
    "coding_problems/05-friday/test_friday.py:175:11: C0121: Comparison 'is_valid_IP('42.117.0.67') == True' should be 'is_valid_IP('42.117.0.67') is True' if checking for the singleton value True, or 'is_valid_IP('42.117.0.67')' if testing for truthiness (singleton-comparison)",
    "coding_problems/05-friday/test_friday.py:178:0: C0103: Function name \"test_valid_ip_17\" doesn't conform to '(?:(?P<snake_case>[a-z_]+)|(?P<PascalCase>[^a-z][A-Za-z]+)|(?P<camelCase>[^A-Z][A-Za-z]+))$' pattern (invalid-name)",
    "coding_problems/05-friday/test_friday.py:179:11: C0121: Comparison 'is_valid_IP('98.214.80.86') == True' should be 'is_valid_IP('98.214.80.86') is True' if checking for the singleton value True, or 'is_valid_IP('98.214.80.86')' if testing for truthiness (singleton-comparison)",
    "coding_problems/05-friday/test_friday.py:182:0: C0103: Function name \"test_valid_ip_18\" doesn't conform to '(?:(?P<snake_case>[a-z_]+)|(?P<PascalCase>[^a-z][A-Za-z]+)|(?P<camelCase>[^A-Z][A-Za-z]+))$' pattern (invalid-name)",
    "coding_problems/05-friday/test_friday.py:183:11: C0121: Comparison 'is_valid_IP('51.32.82.30') == True' should be 'is_valid_IP('51.32.82.30') is True' if checking for the singleton value True, or 'is_valid_IP('51.32.82.30')' if testing for truthiness (singleton-comparison)",
    "coding_problems/05-friday/test_friday.py:186:0: C0103: Function name \"test_valid_ip_19\" doesn't conform to '(?:(?P<snake_case>[a-z_]+)|(?P<PascalCase>[^a-z][A-Za-z]+)|(?P<camelCase>[^A-Z][A-Za-z]+))$' pattern (invalid-name)",
    "coding_problems/05-friday/test_friday.py:187:11: C0121: Comparison 'is_valid_IP('66.47.0.93') == True' should be 'is_valid_IP('66.47.0.93') is True' if checking for the singleton value True, or 'is_valid_IP('66.47.0.93')' if testing for truthiness (singleton-comparison)",
    "coding_problems/05-friday/test_friday.py:190:0: C0103: Function name \"test_valid_ip_20\" doesn't conform to '(?:(?P<snake_case>[a-z_]+)|(?P<PascalCase>[^a-z][A-Za-z]+)|(?P<camelCase>[^A-Z][A-Za-z]+))$' pattern (invalid-name)",
    "coding_problems/05-friday/test_friday.py:191:11: C0121: Comparison 'is_valid_IP('84.46.0.95') == True' should be 'is_valid_IP('84.46.0.95') is True' if checking for the singleton value True, or 'is_valid_IP('84.46.0.95')' if testing for truthiness (singleton-comparison)",
    "coding_problems/05-friday/test_friday.py:194:0: C0103: Function name \"test_valid_ip_21\" doesn't conform to '(?:(?P<snake_case>[a-z_]+)|(?P<PascalCase>[^a-z][A-Za-z]+)|(?P<camelCase>[^A-Z][A-Za-z]+))$' pattern (invalid-name)",
    "coding_problems/05-friday/test_friday.py:195:11: C0121: Comparison 'is_valid_IP('50.58.22.31') == True' should be 'is_valid_IP('50.58.22.31') is True' if checking for the singleton value True, or 'is_valid_IP('50.58.22.31')' if testing for truthiness (singleton-comparison)",
    "coding_problems/05-friday/test_friday.py:198:0: C0103: Function name \"test_valid_ip_22\" doesn't conform to '(?:(?P<snake_case>[a-z_]+)|(?P<PascalCase>[^a-z][A-Za-z]+)|(?P<camelCase>[^A-Z][A-Za-z]+))$' pattern (invalid-name)",
    "coding_problems/05-friday/test_friday.py:199:11: C0121: Comparison 'is_valid_IP('72.53.59.40') == True' should be 'is_valid_IP('72.53.59.40') is True' if checking for the singleton value True, or 'is_valid_IP('72.53.59.40')' if testing for truthiness (singleton-comparison)",
    "coding_problems/05-friday/test_friday.py:202:0: C0103: Function name \"test_valid_ip_23\" doesn't conform to '(?:(?P<snake_case>[a-z_]+)|(?P<PascalCase>[^a-z][A-Za-z]+)|(?P<camelCase>[^A-Z][A-Za-z]+))$' pattern (invalid-name)",
    "coding_problems/05-friday/test_friday.py:203:11: C0121: Comparison 'is_valid_IP('81.28.48.1') == True' should be 'is_valid_IP('81.28.48.1') is True' if checking for the singleton value True, or 'is_valid_IP('81.28.48.1')' if testing for truthiness (singleton-comparison)",
    "coding_problems/05-friday/test_friday.py:6:0: W0612: Unused variable 'test_basic_test_1' (unused-variable)",
    "coding_problems/05-friday/test_friday.py:10:0: W0612: Unused variable 'test_basic_test_2' (unused-variable)",
    "coding_problems/05-friday/test_friday.py:14:0: W0612: Unused variable 'test_basic_test_3' (unused-variable)",
    "coding_problems/05-friday/test_friday.py:18:0: W0612: Unused variable 'test_basic_test_4' (unused-variable)",
    "coding_problems/05-friday/test_friday.py:22:0: W0612: Unused variable 'test_basic_test_5' (unused-variable)",
    "coding_problems/05-friday/test_friday.py:26:0: W0612: Unused variable 'test_basic_test_6' (unused-variable)",
    "coding_problems/05-friday/test_friday.py:30:0: W0612: Unused variable 'test_basic_test_7' (unused-variable)",
    "coding_problems/05-friday/test_friday.py:34:0: W0612: Unused variable 'test_basic_test_8' (unused-variable)",
    "coding_problems/05-friday/test_friday.py:38:0: W0612: Unused variable 'test_basic_test_9' (unused-variable)",
    "coding_problems/05-friday/test_friday.py:42:0: W0612: Unused variable 'test_basic_test_10' (unused-variable)",
    "coding_problems/05-friday/test_friday.py:46:0: W0612: Unused variable 'test_basic_test_11' (unused-variable)",
    "coding_problems/05-friday/test_friday.py:50:0: W0612: Unused variable 'test_basic_test_12' (unused-variable)",
    "coding_problems/05-friday/test_friday.py:54:0: W0612: Unused variable 'test_invalid_ip_1' (unused-variable)",
    "coding_problems/05-friday/test_friday.py:58:0: W0612: Unused variable 'test_invalid_ip_2' (unused-variable)",
    "coding_problems/05-friday/test_friday.py:62:0: W0612: Unused variable 'test_invalid_ip_3' (unused-variable)",
    "coding_problems/05-friday/test_friday.py:66:0: W0612: Unused variable 'test_invalid_ip_4' (unused-variable)",
    "coding_problems/05-friday/test_friday.py:70:0: W0612: Unused variable 'test_invalid_ip_5' (unused-variable)",
    "coding_problems/05-friday/test_friday.py:74:0: W0612: Unused variable 'test_invalid_ip_6' (unused-variable)",
    "coding_problems/05-friday/test_friday.py:78:0: W0612: Unused variable 'test_invalid_ip_7' (unused-variable)",
    "coding_problems/05-friday/test_friday.py:82:0: W0612: Unused variable 'test_invalid_ip_8' (unused-variable)",
    "coding_problems/05-friday/test_friday.py:86:0: W0612: Unused variable 'test_invalid_ip_9' (unused-variable)",
    "coding_problems/05-friday/test_friday.py:90:0: W0612: Unused variable 'test_invalid_ip_10' (unused-variable)",
    "coding_problems/05-friday/test_friday.py:94:0: W0612: Unused variable 'test_invalid_ip_11' (unused-variable)",
    "coding_problems/05-friday/test_friday.py:98:0: W0612: Unused variable 'test_invalid_ip_12' (unused-variable)",
    "coding_problems/05-friday/test_friday.py:102:0: W0612: Unused variable 'test_invalid_ip_12' (unused-variable)",
    "coding_problems/05-friday/test_friday.py:106:0: W0612: Unused variable 'test_invalid_ip_13' (unused-variable)",
    "coding_problems/05-friday/test_friday.py:110:0: W0612: Unused variable 'test_invalid_ip_14' (unused-variable)",
    "coding_problems/05-friday/test_friday.py:114:0: W0612: Unused variable 'test_valid_ip_1' (unused-variable)",
    "coding_problems/05-friday/test_friday.py:118:0: W0612: Unused variable 'test_valid_ip_2' (unused-variable)",
    "coding_problems/05-friday/test_friday.py:122:0: W0612: Unused variable 'test_valid_ip_3' (unused-variable)",
    "coding_problems/05-friday/test_friday.py:126:0: W0612: Unused variable 'test_valid_ip_4' (unused-variable)",
    "coding_problems/05-friday/test_friday.py:130:0: W0612: Unused variable 'test_valid_ip_5' (unused-variable)",
    "coding_problems/05-friday/test_friday.py:134:0: W0612: Unused variable 'test_valid_ip_6' (unused-variable)",
    "coding_problems/05-friday/test_friday.py:138:0: W0612: Unused variable 'test_valid_ip_7' (unused-variable)",
    "coding_problems/05-friday/test_friday.py:142:0: W0612: Unused variable 'test_valid_ip_8' (unused-variable)",
    "coding_problems/05-friday/test_friday.py:146:0: W0612: Unused variable 'test_valid_ip_9' (unused-variable)",
    "coding_problems/05-friday/test_friday.py:150:0: W0612: Unused variable 'test_valid_ip_10' (unused-variable)",
    "coding_problems/05-friday/test_friday.py:154:0: W0612: Unused variable 'test_valid_ip_11' (unused-variable)",
    "coding_problems/05-friday/test_friday.py:158:0: W0612: Unused variable 'test_valid_ip_12' (unused-variable)",
    "coding_problems/05-friday/test_friday.py:162:0: W0612: Unused variable 'test_valid_ip_13' (unused-variable)",
    "coding_problems/05-friday/test_friday.py:166:0: W0612: Unused variable 'test_valid_ip_14' (unused-variable)",
    "coding_problems/05-friday/test_friday.py:170:0: W0612: Unused variable 'test_valid_ip_15' (unused-variable)",
    "coding_problems/05-friday/test_friday.py:174:0: W0612: Unused variable 'test_valid_ip_16' (unused-variable)",
    "coding_problems/05-friday/test_friday.py:178:0: W0612: Unused variable 'test_valid_ip_17' (unused-variable)",
    "coding_problems/05-friday/test_friday.py:182:0: W0612: Unused variable 'test_valid_ip_18' (unused-variable)",
    "coding_problems/05-friday/test_friday.py:186:0: W0612: Unused variable 'test_valid_ip_19' (unused-variable)",
    "coding_problems/05-friday/test_friday.py:190:0: W0612: Unused variable 'test_valid_ip_20' (unused-variable)",
    "coding_problems/05-friday/test_friday.py:194:0: W0612: Unused variable 'test_valid_ip_21' (unused-variable)",
    "coding_problems/05-friday/test_friday.py:198:0: W0612: Unused variable 'test_valid_ip_22' (unused-variable)",
    "coding_problems/05-friday/test_friday.py:202:0: W0612: Unused variable 'test_valid_ip_23' (unused-variable)",
    "coding_problems/05-friday/test_friday.py:507:0: W0612: Unused variable 'test_random_test_cases' (unused-variable)"
   ],
   "score": 0.0
  },
  {
   "file_name": "./coding_problems/03-wednesday/test_wednesday.py",
   "errors": [
    "coding_problems/03-wednesday/test_wednesday.py:7:0: C0301: Line too long (307/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:11:0: C0301: Line too long (315/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:15:0: C0301: Line too long (235/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:19:0: C0301: Line too long (341/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:23:0: C0301: Line too long (247/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:27:0: C0301: Line too long (237/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:31:0: C0301: Line too long (293/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:35:0: C0301: Line too long (235/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:39:0: C0301: Line too long (345/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:43:0: C0301: Line too long (307/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:47:0: C0301: Line too long (318/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:51:0: C0301: Line too long (155/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:52:0: C0301: Line too long (160/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:53:0: C0301: Line too long (184/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:57:0: C0301: Line too long (167/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:63:0: C0301: Line too long (160/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:67:0: C0301: Line too long (161/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:68:0: C0301: Line too long (180/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:69:0: C0301: Line too long (206/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:70:0: C0301: Line too long (162/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:71:0: C0301: Line too long (186/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:72:0: C0301: Line too long (157/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:73:0: C0301: Line too long (179/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:75:0: C0301: Line too long (159/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:77:0: C0301: Line too long (151/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:78:0: C0301: Line too long (165/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:79:0: C0301: Line too long (189/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:82:0: C0301: Line too long (183/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:83:0: C0301: Line too long (209/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:85:0: C0301: Line too long (165/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:90:0: C0301: Line too long (168/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:91:0: C0301: Line too long (194/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:92:0: C0301: Line too long (165/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:93:0: C0301: Line too long (189/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:94:0: C0301: Line too long (160/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:95:0: C0301: Line too long (182/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:100:0: C0301: Line too long (165/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:101:0: C0301: Line too long (189/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:104:0: C0301: Line too long (151/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:105:0: C0301: Line too long (173/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:107:0: C0301: Line too long (154/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:108:0: C0301: Line too long (158/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:109:0: C0301: Line too long (182/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:111:0: C0301: Line too long (161/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:112:0: C0301: Line too long (165/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:113:0: C0301: Line too long (187/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:117:0: C0301: Line too long (165/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:118:0: C0301: Line too long (168/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:119:0: C0301: Line too long (190/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:120:0: C0301: Line too long (168/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:121:0: C0301: Line too long (192/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:124:0: C0301: Line too long (167/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:125:0: C0301: Line too long (193/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:126:0: C0301: Line too long (158/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:127:0: C0301: Line too long (182/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:128:0: C0301: Line too long (153/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:129:0: C0301: Line too long (175/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:132:0: C0301: Line too long (177/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:133:0: C0301: Line too long (203/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:135:0: C0301: Line too long (157/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:136:0: C0301: Line too long (178/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:137:0: C0301: Line too long (204/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:139:0: C0301: Line too long (152/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:143:0: C0301: Line too long (172/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:144:0: C0301: Line too long (166/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:145:0: C0301: Line too long (188/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:146:0: C0301: Line too long (161/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:147:0: C0301: Line too long (183/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:149:0: C0301: Line too long (151/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:153:0: C0301: Line too long (162/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:155:0: C0301: Line too long (156/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:156:0: C0301: Line too long (168/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:157:0: C0301: Line too long (192/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:158:0: C0301: Line too long (160/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:159:0: C0301: Line too long (182/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:161:0: C0301: Line too long (165/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:162:0: C0301: Line too long (152/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:163:0: C0301: Line too long (174/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:165:0: C0301: Line too long (169/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:167:0: C0301: Line too long (153/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:168:0: C0301: Line too long (163/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:169:0: C0301: Line too long (185/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:173:0: C0301: Line too long (170/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:174:0: C0301: Line too long (154/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:175:0: C0301: Line too long (176/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:176:0: C0301: Line too long (174/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:177:0: C0301: Line too long (200/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:179:0: C0301: Line too long (155/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:188:0: C0301: Line too long (185/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:189:0: C0301: Line too long (211/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:191:0: C0301: Line too long (159/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:193:0: C0301: Line too long (157/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:194:0: C0301: Line too long (155/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:195:0: C0301: Line too long (177/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:199:0: C0301: Line too long (168/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:202:0: C0301: Line too long (174/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:203:0: C0301: Line too long (200/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:205:0: C0301: Line too long (154/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:207:0: C0301: Line too long (159/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:208:0: C0301: Line too long (163/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:209:0: C0301: Line too long (185/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:210:0: C0301: Line too long (178/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:211:0: C0301: Line too long (204/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:212:0: C0301: Line too long (168/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:213:0: C0301: Line too long (194/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:214:0: C0301: Line too long (177/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:215:0: C0301: Line too long (203/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:216:0: C0301: Line too long (173/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:217:0: C0301: Line too long (199/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:220:0: C0301: Line too long (169/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:221:0: C0301: Line too long (193/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:223:0: C0301: Line too long (161/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:224:0: C0301: Line too long (163/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:225:0: C0301: Line too long (187/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:226:0: C0301: Line too long (168/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:227:0: C0301: Line too long (194/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:229:0: C0301: Line too long (152/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:232:0: C0301: Line too long (155/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:233:0: C0301: Line too long (177/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:236:0: C0301: Line too long (188/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:237:0: C0301: Line too long (214/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:241:0: C0301: Line too long (151/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:242:0: C0301: Line too long (175/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:243:0: C0301: Line too long (201/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:244:0: C0301: Line too long (332/150) (line-too-long)",
    "coding_problems/03-wednesday/test_wednesday.py:6:0: C0103: Function name \"test_basic_test_1\" doesn't conform to '(?:(?P<snake_case>[a-z_]+)|(?P<PascalCase>[^a-z][A-Za-z]+)|(?P<camelCase>[^A-Z][A-Za-z]+))$' pattern (invalid-name)",
    "coding_problems/03-wednesday/test_wednesday.py:10:0: C0103: Function name \"test_basic_test_2\" doesn't conform to '(?:(?P<snake_case>[a-z_]+)|(?P<PascalCase>[^a-z][A-Za-z]+)|(?P<camelCase>[^A-Z][A-Za-z]+))$' pattern (invalid-name)",
    "coding_problems/03-wednesday/test_wednesday.py:14:0: C0103: Function name \"test_basic_test_3\" doesn't conform to '(?:(?P<snake_case>[a-z_]+)|(?P<PascalCase>[^a-z][A-Za-z]+)|(?P<camelCase>[^A-Z][A-Za-z]+))$' pattern (invalid-name)",
    "coding_problems/03-wednesday/test_wednesday.py:18:0: C0103: Function name \"test_additional_test_1\" doesn't conform to '(?:(?P<snake_case>[a-z_]+)|(?P<PascalCase>[^a-z][A-Za-z]+)|(?P<camelCase>[^A-Z][A-Za-z]+))$' pattern (invalid-name)",
    "coding_problems/03-wednesday/test_wednesday.py:22:0: C0103: Function name \"test_additional_test_2\" doesn't conform to '(?:(?P<snake_case>[a-z_]+)|(?P<PascalCase>[^a-z][A-Za-z]+)|(?P<camelCase>[^A-Z][A-Za-z]+))$' pattern (invalid-name)",
    "coding_problems/03-wednesday/test_wednesday.py:26:0: C0103: Function name \"test_additional_test_3\" doesn't conform to '(?:(?P<snake_case>[a-z_]+)|(?P<PascalCase>[^a-z][A-Za-z]+)|(?P<camelCase>[^A-Z][A-Za-z]+))$' pattern (invalid-name)",
    "coding_problems/03-wednesday/test_wednesday.py:30:0: C0103: Function name \"test_additional_test_4\" doesn't conform to '(?:(?P<snake_case>[a-z_]+)|(?P<PascalCase>[^a-z][A-Za-z]+)|(?P<camelCase>[^A-Z][A-Za-z]+))$' pattern (invalid-name)",
    "coding_problems/03-wednesday/test_wednesday.py:34:0: C0103: Function name \"test_additional_test_5\" doesn't conform to '(?:(?P<snake_case>[a-z_]+)|(?P<PascalCase>[^a-z][A-Za-z]+)|(?P<camelCase>[^A-Z][A-Za-z]+))$' pattern (invalid-name)",
    "coding_problems/03-wednesday/test_wednesday.py:38:0: C0103: Function name \"test_additional_test_6\" doesn't conform to '(?:(?P<snake_case>[a-z_]+)|(?P<PascalCase>[^a-z][A-Za-z]+)|(?P<camelCase>[^A-Z][A-Za-z]+))$' pattern (invalid-name)",
    "coding_problems/03-wednesday/test_wednesday.py:42:0: C0103: Function name \"test_additional_test_7\" doesn't conform to '(?:(?P<snake_case>[a-z_]+)|(?P<PascalCase>[^a-z][A-Za-z]+)|(?P<camelCase>[^A-Z][A-Za-z]+))$' pattern (invalid-name)",
    "coding_problems/03-wednesday/test_wednesday.py:6:0: W0612: Unused variable 'test_basic_test_1' (unused-variable)",
    "coding_problems/03-wednesday/test_wednesday.py:10:0: W0612: Unused variable 'test_basic_test_2' (unused-variable)",
    "coding_problems/03-wednesday/test_wednesday.py:14:0: W0612: Unused variable 'test_basic_test_3' (unused-variable)",
    "coding_problems/03-wednesday/test_wednesday.py:18:0: W0612: Unused variable 'test_additional_test_1' (unused-variable)",
    "coding_problems/03-wednesday/test_wednesday.py:22:0: W0612: Unused variable 'test_additional_test_2' (unused-variable)",
    "coding_problems/03-wednesday/test_wednesday.py:26:0: W0612: Unused variable 'test_additional_test_3' (unused-variable)",
    "coding_problems/03-wednesday/test_wednesday.py:30:0: W0612: Unused variable 'test_additional_test_4' (unused-variable)",
    "coding_problems/03-wednesday/test_wednesday.py:34:0: W0612: Unused variable 'test_additional_test_5' (unused-variable)",
    "coding_problems/03-wednesday/test_wednesday.py:38:0: W0612: Unused variable 'test_additional_test_6' (unused-variable)",
    "coding_problems/03-wednesday/test_wednesday.py:42:0: W0612: Unused variable 'test_additional_test_7' (unused-variable)",
    "coding_problems/03-wednesday/test_wednesday.py:245:0: W0612: Unused variable 'test_random_test_cases' (unused-variable)"
   ],
   "score": 0.0
  },
  {
   "file_name": "./coding_problems/03-wednesday/wednesday.py",
   "errors": [
    "coding_problems/03-wednesday/wednesday.py:1:12: W0613: Unused argument 's' (unused-argument)",
    "coding_problems/03-wednesday/wednesday.py:1:0: W0612: Unused variable 'meeting' (unused-variable)"
   ],
   "score": 0.0
  },
  {
   "file_name": "./cookie_clicker/server.py",
   "errors": [
    "cookie_clicker/server.py:41:4: C0103: Method name \"do_POST\" doesn't conform to '(([a-z_][a-z0-9_]*)|([A-Z][a-zA-Z0-9]+))$' pattern (invalid-name)"
   ],
   "score": 96.6
  }
 ],
 "average_score": 9.1
}